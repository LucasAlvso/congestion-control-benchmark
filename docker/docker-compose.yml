services:
  server:
    build:
      context: ..
      dockerfile: docker/Dockerfile.server
    container_name: tcp-server
    environment:
      - SCENARIO=${SCENARIO:-}
      - CONTAINER_NAME=tcp-server
    cap_add:
      - NET_ADMIN
      - NET_RAW
    ports:
      - "8080:8080"
    volumes:
      - ../logs:/root/logs
      - server_files:/root/files
    networks:
      - tcp-network

  client1:
    build:
      context: ..
      dockerfile: docker/Dockerfile.client
    container_name: tcp-client1
    environment:
      - SCENARIO=${SCENARIO:-}
      - CONTAINER_NAME=tcp-client1
    depends_on:
      - server
    volumes:
      - ../logs:/root/logs
      - ../test-files:/root/test-files
    networks:
      - tcp-network
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true

  client2:
    build:
      context: ..
      dockerfile: docker/Dockerfile.client
    container_name: tcp-client2
    environment:
      - SCENARIO=${SCENARIO:-}
      - CONTAINER_NAME=tcp-client2
    depends_on:
      - server
    volumes:
      - ../logs:/root/logs
      - ../test-files:/root/test-files
    networks:
      - tcp-network
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true

  client3:
    build:
      context: ..
      dockerfile: docker/Dockerfile.client
    container_name: tcp-client3
    environment:
      - SCENARIO=${SCENARIO:-}
      - CONTAINER_NAME=tcp-client3
    depends_on:
      - server
    volumes:
      - ../logs:/root/logs
      - ../test-files:/root/test-files
    networks:
      - tcp-network
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true

  client4:
    build:
      context: ..
      dockerfile: docker/Dockerfile.client
    container_name: tcp-client4
    environment:
      - SCENARIO=${SCENARIO:-}
      - CONTAINER_NAME=tcp-client4
    depends_on:
      - server
    volumes:
      - ../logs:/root/logs
      - ../test-files:/root/test-files
    networks:
      - tcp-network
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true

volumes:
  server_files:

networks:
  tcp-network:
    driver: bridge
